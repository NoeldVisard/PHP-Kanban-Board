{% extends 'base.html.twig' %}

{% block title %}Hello BoardController!{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('board.css', 'css') }}">
{% endblock %}

{% block body %}
<div class="container">
    <div class="kanban-heading">
        {% if is_granted('ROLE_ADMIN') %}
            <a href="http://127.0.0.1:8000/board/edit" class="kanban-heading-text--admin-edit">Edit conditions</a>
        {% endif %}
        <strong class="kanban-heading-text">Kanban Board</strong>
    </div>
    <div class="kanban-board">
        {% for condition in conditions %}
            <div class="kanban-block kanban-block-{{ loop.index }} {{ condition.name }}" id="{{ condition.name }}" ondrop="drop(event)" ondragover="allowDrop(event)">
                <strong>{{ condition.name }}</strong>
                {% if loop.first %}
                    <div class="task-button-block">
                        <button id="task-button" onclick="createTask()">Create new task</button>
                    </div>
                {% endif %}
                {% if tasks[condition.id] is defined %}
                    {% for task in tasks[condition.id] %}
                        <div class="task" id="task-{{ task.id }}" draggable="true" ondragstart="drag(event)" onclick="remove({{ task.id }}, '{{ task.name }}')">
                            <span>{{ task.name }}</span>
                        </div>
                    {% endfor %}
                {% endif %}
            </div>
        {% endfor %}
        <div class="create-new-task-block" id="create-new-task-block">
            <strong>New Task</strong>
            <span class="form-row">
                <label class="form-row-label" for="task-name">Task</label>
                <input class="form-row-input" type="text" name="task-name" id="task-name">
            </span>
            <span class="form-row">
                <label class="form-row-label" for="task-name">Description</label>
                <textarea class="form-row-input" name="task-description" id="task-description" cols="70" rows="10"></textarea>
            </span>
            <span class="form-row">
                <label class="form-row-label" for="task-name">Urgency</label>
                <select class="form-row-input" name="task-urgency" id="task-urgency">
                    <option value="low">Low</option>
                    <option value="Medium">Medium</option>
                    <option value="High">High</option>
                </select>
            </span>
            <span class="form-row">
                <label class="form-row-label" for="task-deadline">Deadline:</label>
{#                TODO: Make min data from current data #}
                <input class="form-row-input" type="date" id="task-deadline" name="task-deadline" min="2022-12-07" max="2050-01-01">
            </span>
            <span class="form-row-buttons">
                <button id="edit-button" onclick="editTask()">Edit</button>
                <button id="save-button" onclick="saveTask()">Save</button>
                <button id="cancel-button" onclick="createTask()">Cancel</button>
            </span>
        </div>
    </div>
</div>
<script>
    function drag(ev) {
        ev.dataTransfer.setData("text", ev.target.id);
    }

    function allowDrop(ev) {
        ev.preventDefault();
    }

    function drop(ev) {
        ev.preventDefault();
        var data = ev.dataTransfer.getData("text");
        ev.currentTarget.appendChild(document.getElementById(data));
        const conditionName = ev.target.id;
        const xhr = new XMLHttpRequest();
        xhr.open("POST", "http://127.0.0.1:8000/task/change-condition", true);
        xhr.setRequestHeader('Content-Type', 'application/json; charset=utf-8');
        xhr.send(JSON.stringify({
            conditionName: conditionName,
            taskId: document.getElementById(data).id.split('-')[1]
        }));
    }

    function createTask(){
        var x = document.getElementById("In process");
        var y = document.getElementById("Completed");
        var z = document.getElementById("create-new-task-block");
        if (x.style.display === "none") {
            x.style.display = "block";
            y.style.display = "block";
            z.style.display = "none";
        } else {
            x.style.display = "none";
            y.style.display = "none";
            z.style.display = "flex";
        }
    }

    function saveTask(){
        const taskName = document.getElementById("task-name").value;
        const taskDescription = document.getElementById("task-description").value;
        const taskUrgency = document.getElementById("task-urgency").value;
        const taskDeadline = document.getElementById("task-deadline").value;

        const xhr = new XMLHttpRequest();
        xhr.withCredentials = true;
        xhr.open("POST", "http://127.0.0.1:8000/task/add", true);
        xhr.setRequestHeader('Content-Type', 'application/json; charset=utf-8');
        xhr.send(JSON.stringify({
            taskName: taskName,
            taskDescription: taskDescription,
            taskUrgency: taskUrgency,
            taskDeadline: taskDeadline
        }));
        xhr.onload = () => {
            document.getElementById("task-name").value = '';
            document.getElementById("task-description").value = '';
            document.getElementById("task-urgency").value = 'low';
            document.getElementById("task-deadline").value = '';

            const newTask = JSON.parse(xhr.response);

            const todo = document.getElementById("Unassigned");
            todo.innerHTML += `
                <div class="task" id="task-${newTask.id}" draggable="true" ondragstart="drag(event)" onclick="remove(${newTask.id}, '${newTask.name}')">
                    <span>${newTask.name}</span>
                </div>
                `
            createTask();
        }

    }

    function remove(taskId, taskName) {
        const xhr = new XMLHttpRequest();
        xhr.withCredentials = true;
        xhr.open("POST", "http://127.0.0.1:8000/task/delete", true);
        xhr.setRequestHeader('Content-Type', 'application/json; charset=utf-8');
        xhr.send(JSON.stringify({
            taskId: taskId,
        }));
        xhr.onload = () => {
            const taskElem = document.getElementById(`task-${taskId}`);
            console.log(taskElem.innerText)
            taskElem.parentNode.removeChild(taskElem)
        }
    }
</script>
{% endblock %}
